{"cmd": "\n\nedge_index = torch.tensor(\n    [\n        [0, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8],\n        [2, 3, 0, 1, 4, 3, 6, 8, 5, 7, 6, 5],\n    ],\n)\nx = torch.tensor(\n    [\n        [0.6023, 2.9591],\n        [1.8997, 2.7768],\n        [0.7683, 0.6964],\n        [0.6626, 1.6655],\n        [1.8528, 0.7047],\n        [0.6944, 2.8384],\n        [2.2527, 0.5040],\n        [2.1563, 2.8345],\n        [0.6950, 0.4571],\n    ]\n)\n\nedge_features = torch.rand(size=(edge_index.shape[1], x.shape[1]))\n\nnum_virtual_nodes = 5\nrand_idx = torch.vstack(\n    [\n        torch.arange(x.shape[0]),\n        torch.randint(0, num_virtual_nodes - 1, size=(x.shape[0], 1)).squeeze(),\n    ]\n)\ncluster_assignments = torch.zeros(size=(x.shape[0], num_virtual_nodes))\ncluster_assignments[rand_idx[0, :], rand_idx[1, :]] = 1\n\n\npool_complex(\n    node_features=x,\n    edge_features=edge_features,\n    edge_index=edge_index,\n    cluster_assignments=cluster_assignments,\n)", "cmd_opts": " --cell_id=DvnKTdS7kd -s", "import_complete": 1, "terminal": "nvimterm"}